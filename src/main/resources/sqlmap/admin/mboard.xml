<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin.mboard">
	<!-- 메인 메뉴 리스트 조회 -->
	<select id="getMenuBoardList" parameterType="hashmap" resultType="hashmap">
		/* admin.mboard.getMenuBoardList - 메인메뉴리스트*/
			SELECT TOP 100 PERCENT *  
			FROM MBOARD_MNGT
			WHERE 1=1
			<if test='i_sViewFlag != null and !"".equals(i_sViewFlag)'> AND VIEW_FLAG	= #{i_sViewFlag} </if>
			ORDER BY B_IDX ASC
	</select>
	<select id="getMBoardList" parameterType="hashmap" resultType="hashmap">
		/* admin.mboard.getMBoardList */
			<include refid="common.pagingPre"/>
			SELECT TOP 100 PERCENT 
					B_IDX
					, B_NM
					, B_TYPE
					, REG_DT
					, UPD_DT
					, USEYN_COMMENT
					, USEYN_SECRET
					, USEYN_COMMENT_SECRET
					, USEYN_ATTACHEMENT
					, USEYN_LOGIN
					, USEYN_DOWNLOAD_PERM
					, VIEW_FLAG
					, B_KIND
					, (
						SELECT	COUNT(*)
						FROM	MBOARD_CATEGORY	Mc
						WHERE	Mc.B_IDX	=	Mm.B_IDX
					) AS CATEGORY_CNT
					, (
						SELECT	NAME
						FROM	CODE_INSTANCE Ci
						WHERE	CODE		=	'000013'
						AND		CODE_INST	=	Mm.B_KIND
					) AS B_KIND_NM
					, (
						SELECT	NAME
						FROM	CODE_INSTANCE Ci
						WHERE	CODE		=	'000014'
						AND		CODE_INST	=	Mm.B_TYPE
					) AS B_TYPE_NM
			FROM MBOARD_MNGT Mm
			WHERE 1=1
			<if test='i_sText != null and !"".equals(i_sText)'> AND B_NM LIKE CONCAT('%', #{i_sText}, '%') </if>
			<if test='i_sBidx != null and !"".equals(i_sBidx)'> AND B_IDX		= #{i_sBidx}</if>
			<if test='i_sViewFlag != null and !"".equals(i_sViewFlag)'> AND VIEW_FLAG	= #{i_sViewFlag} </if>
			<include refid="common.pagingPost"/>
	</select>
	<!-- 게시판 조회 -->
	<select id="getCodeInstance" parameterType="hashmap" resultType="hashmap">
		/* admin.mboard.getCodeInstance 코드 조회*/
		SELECT	* 
		FROM	CODE_INSTANCE
		WHERE	1=1
		<if test='code != null and !"".equals(code)'> AND CODE = #{code} </if>	<!-- 코드 조회 -->
	</select>
	<!-- 게시판 조회 -->
	<select id="getCategory" parameterType="hashmap" resultType="hashmap">
		/* admin.mboard.getCategory 카테고리 조회*/
		SELECT	* 
		FROM	MBOARD_CATEGORY
		WHERE	1=1
		<if test='i_sBidx != null and !"".equals(i_sBidx)'> AND B_IDX = #{i_sBidx} </if>	<!-- 게시글 아이디 조회 -->
	</select>
	<!-- 게시판 조회 -->
	<select id="getMboardView" parameterType="hashmap" resultType="hashmap">
		/* admin.mboard.getMboardView 게시판 조회 */
		SELECT	B_IDX
				, B_NM
				, B_KIND
				, B_TYPE
				, REG_DT
				, UPD_DT
				, USEYN_COMMENT
				, USEYN_SECRET
				, USEYN_COMMENT_SECRET
				, USEYN_ATTACHEMENT
				, USEYN_LOGIN
				, USEYN_DOWNLOAD_PERM
				, VIEW_FLAG
				, ORG_IDX
				, ORG_TYPE
		FROM	MBOARD_MNGT
		WHERE	1=1
		<if test='i_sBidx != null and !"".equals(i_sBidx)'> AND B_IDX = #{i_sBidx} </if>	<!-- 게시글 아이디 조회 -->
	</select>
	<insert id="insertMboardMaster" parameterType="hashmap">
		/* admin.mboard.insertMboardMaster 게시판 등록 */
		INSERT	INTO	MBOARD_MNGT
			(
				B_NM
				, B_KIND
				, B_TYPE
				, REG_DT
				, UPD_DT
				, USEYN_COMMENT
				, USEYN_SECRET
				, USEYN_COMMENT_SECRET
				, USEYN_ATTACHEMENT
				, USEYN_LOGIN
				, USEYN_DOWNLOAD_PERM
				, VIEW_FLAG
				, ORG_IDX
				, ORG_TYPE
			)
		VALUES
			(
				#{i_sTitle}
				, #{i_sBoardKind}
				, #{i_sBoardType}
				, Convert(varchar(10),Getdate(),112)
				, Convert(varchar(10),Getdate(),112)
				, #{i_sUseYnComment}
				, #{i_sUseYnSecret}
				, #{i_sUseYnCommentSecret}
				, #{i_sUseYnAttachMent}
				, #{i_sUseYnLogin}
				, #{i_sUseYnDownloadPerm}
				, #{i_sViewFlag}
				, #{i_sOrgIdx}
				, #{i_sOrgType}
			)
		<selectKey resultType="java.lang.Integer" keyProperty="i_sBidx">
			SELECT	@@IDENTITY AS ID
		</selectKey>
	</insert>
	<update id="updateMboardMaster" parameterType="hashmap">
		UPDATE	MBOARD_MNGT
		SET
			B_NM					=	#{i_sTitle}
			, B_KIND				=	#{i_sBoardKind}
			, B_TYPE				=	#{i_sBoardType}
			, UPD_DT				=	Convert(varchar(10),Getdate(),112)
			, USEYN_COMMENT			=	#{i_sUseYnComment}
			, USEYN_SECRET			=	#{i_sUseYnSecret}
			, USEYN_COMMENT_SECRET	=	#{i_sUseYnCommentSecret}
			, USEYN_ATTACHEMENT		=	#{i_sUseYnAttachMent}
			, USEYN_LOGIN			=	#{i_sUseYnLogin}
			, USEYN_DOWNLOAD_PERM	=	#{i_sUseYnDownloadPerm}
			, VIEW_FLAG				=	#{i_sViewFlag}
			, ORG_TYPE				=	#{i_sOrgType}
			, ORG_IDX				=	#{i_sOrgIdx}
		WHERE	B_IDX				=	#{i_sBidx}
	</update>
	<delete id="deleteMbaord" parameterType="hashmap">
		DELETE	FROM	MBOARD_MNGT
		WHERE	1=1
		<if test='i_sBidx != null and !"".equals(i_sBidx)'> AND B_IDX = #{i_sBidx} </if>	<!-- 게시글 아이디 조회 -->
	</delete>
	<delete id="deleteMboardCategroy" parameterType="hashmap">
		DELETE	FROM	MBOARD_CATEGORY
		WHERE	1=1
		<if test='i_sBidx != null and !"".equals(i_sBidx)'> AND B_IDX = #{i_sBidx} </if>	<!-- 게시글 아이디 조회 -->
	</delete>
	<insert id="insertMboardCategroy" parameterType="hashmap">
		INSERT	INTO	MBOARD_CATEGORY
			(
				B_IDX
				, C_IDX
				, NAME
				, IS_USE
			)
		VALUES
			(
				#{i_sBidx}
				, #{i_sCIdx}
				, #{i_sName}
				, 'Y'
			)
	</insert>
	<select id="getNormalboardList" parameterType="hashmap" resultType="hashmap">
		<include refid="common.pagingPre"/>
				SELECT B.NAME AS CATEGORY_NAME
					, ISNULL(C.NAME,'') AS CHURCH_NAME
					, ISNULL(D.NAME,'') AS DEPART_NAME
					, ISNULL(O.NAME, '') AS ORG_NAME
					, A.*
					, ROW_NUMBER() OVER(ORDER BY A.IS_NOTICE DESC, A.REGDATE, A.BL_IDX DESC) AS R_NUM
				FROM (
					SELECT	BL_IDX
							, TITLE
							, CONTENT
							, USER_ID
							, WRITER
							, PWD
							, REGDATE
							, UPDDATE
							, EMAIL
							, IS_VIEW
							, IS_SECRET
							, DEPART_IDX
							, CHURCH_IDX
							, HIT
							, B_IDX
							, IS_NOTICE
							, C_IDX
							, DISPLAY_YN
							, EVENT_DATE
							, DOWN_LEVEL
							, UPDATE_ID
							, (
								SELECT FILENAME
								FROM MBOARD_UPLOAD  A3
								WHERE A3.BU_IDX IN (SELECT MAX(BU_IDX) FROM MBOARD_UPLOAD A4 WHERE M.BL_IDX=A4.BL_IDX AND A4.FILETYPE is null) ) FILENAME1
							, (SELECT FILEPATH	FROM MBOARD_UPLOAD  A3 WHERE A3.BU_IDX IN (SELECT MAX(BU_IDX) FROM MBOARD_UPLOAD A4 WHERE M.BL_IDX=A4.BL_IDX AND A4.FILETYPE is null) ) FILEPATH1
							, (SELECT STRFILENAME FROM MBOARD_UPLOAD  A3 WHERE A3.BU_IDX IN (SELECT MAX(BU_IDX) FROM MBOARD_UPLOAD A4 WHERE M.BL_IDX=A4.BL_IDX AND A4.FILETYPE is null) ) STRFILENAME1
							, (
								SELECT FILENAME
								FROM MBOARD_UPLOAD  A3
								WHERE A3.BU_IDX IN (SELECT MAX(BU_IDX) FROM MBOARD_UPLOAD A4 WHERE M.BL_IDX=A4.BL_IDX AND A4.FILETYPE IN
																																		(
																																			'jpg'
																																			,'png'
																																			,'jpeg'
																																			,'gif'
																																			,'JPG'
																																			,'PNG'
																																			,'JPEG'
																																			,'GIF'
																																		)) ) FILENAME
							, (SELECT FILEPATH	FROM MBOARD_UPLOAD  A3 WHERE A3.BU_IDX IN (SELECT MAX(BU_IDX) FROM MBOARD_UPLOAD A4 WHERE M.BL_IDX=A4.BL_IDX AND A4.FILETYPE IN
																																		(
																																			'jpg'
																																			,'png'
																																			,'jpeg'
																																			,'gif'
																																			,'JPG'
																																			,'PNG'
																																			,'JPEG'
																																			,'GIF'
																																		)) ) FILEPATH
							, (SELECT STRFILENAME FROM MBOARD_UPLOAD  A3 WHERE A3.BU_IDX IN (SELECT MAX(BU_IDX) FROM MBOARD_UPLOAD A4 WHERE M.BL_IDX=A4.BL_IDX AND A4.FILETYPE IN
																																		(
																																			'jpg'
																																			,'png'
																																			,'jpeg'
																																			,'gif'
																																			,'JPG'
																																			,'PNG'
																																			,'JPEG'
																																			,'GIF'
																																		)) ) STRFILENAME
					FROM MBOARD M
					WHERE M.B_IDX	=	#{i_sBidx}
					<if test='i_sCIdx != null and !"".equals(i_sCIdx)'> AND C_IDX = #{i_sCIdx}</if><!-- 카테고리 조회 -->
					<if test='schTextGubun != null and !"".equals(schTextGubun)'>
						<if test='schTextGubun == "title"'>AND	TITLE LIKE CONCAT('%', #{schText}, '%') </if>
						<if test='schTextGubun == "content"'>AND	CONTENT LIKE CONCAT('%', #{schText}, '%') </if>
						<if test='schTextGubun == "all"'>AND	
																(
																	TITLE LIKE CONCAT('%', #{schText}, '%')
																	OR
																	CONTENT LIKE CONCAT('%', #{schText}, '%')
																)
											</if>
						<if test='schTextGubun == "writer"'>
								AND WRITER	LIKE CONCAT('%', #{schText}, '%')
						</if>
					</if>
					<if test='i_sCIdx != null and !"".equals(i_sCIdx)'> AND C_IDX = #{i_sCIdx}</if><!-- 카테고리 조회 -->
					<if test='i_sCIdx != null and !"".equals(i_sCIdx)'> AND C_IDX = #{i_sCIdx}</if><!-- 카테고리 조회 -->
					<if test='i_sCIdx != null and !"".equals(i_sCIdx)'> AND C_IDX = #{i_sCIdx}</if><!-- 카테고리 조회 -->
					<if test='i_sCIdx != null and !"".equals(i_sCIdx)'> AND C_IDX = #{i_sCIdx}</if><!-- 카테고리 조회 -->
				) A
				LEFT OUTER JOIN MBOARD_CATEGORY B
					ON B.C_IDX		= A.C_IDX
					AND B.B_IDX		= A.B_IDX
					AND B.IS_USE	= 'Y'
				LEFT OUTER JOIN ORG_HIERARCHY   O
					ON O.ORG_IDX	= A.DEPART_IDX
				LEFT OUTER JOIN CHURCH		  C
					ON C.CHURCH_IDX = A.CHURCH_IDX
				LEFT OUTER JOIN DEPARTMENT	  D
					ON D.DEPART_IDX = A.DEPART_IDX
		<include refid="common.pagingPost"/> 
	</select>
	<select id="postViewContent" parameterType="hashmap" resultType="hashmap">
	/* admin.mboard.postViewContent 게시판 게시글 */
		SELECT	BL_IDX
				, TITLE
				, CONTENT
				, USER_ID
				, WRITER
				, PWD
				, REGDATE
				, UPDDATE
				, EMAIL
				, IS_VIEW
				, IS_SECRET
				, DEPART_IDX
				, CHURCH_IDX
				, HIT
				, B_IDX
				, IS_NOTICE
				, C_IDX
				, DISPLAY_YN
				, EVENT_DATE
				, DOWN_LEVEL
				, UPDATE_ID
				, (SELECT TOP 1 BL_IDX FROM MBOARD WHERE BL_IDX=(SELECT MAX(BL_IDX) FROM MBOARD X WHERE X.B_IDX = #{i_sBidx} AND X.BL_IDX <![CDATA[<]]> #{i_sBlidx} )) AS BEFORE_P_IDX
				, (SELECT TOP 1 BL_IDX FROM MBOARD WHERE BL_IDX=(SELECT MIN(BL_IDX) FROM MBOARD X WHERE X.B_IDX = #{i_sBidx} AND X.BL_IDX <![CDATA[>]]> #{i_sBlidx} )) AS NEXT_P_IDX
		FROM	MBOARD
		WHERE	BL_IDX 	=	#{i_sBlidx}
	</select>
	<select id="getCommentList" parameterType="hashmap" resultType="hashmap">
		/*admin.mboard.getCommentList - 댓글 리스트*/
		SELECT	IDX
				, BL_IDX
				, COMMENT
				, REG_DATE
				, UPD_DATE
				, USER_ID
				, COMMENT_SECRET
		FROM	MBOARD_COMMENT
		WHERE	1=1
		<if test='i_sBlidx != null and !"".equals(i_sBlidx)'> AND BL_IDX	= #{i_sBlidx} </if>
	</select>
	<insert id="insertComment" parameterType="hashmap">
		/*admin.mboard.insertComment - 댓글 등록*/
		INSERT	INTO	MBOARD_COMMENT
			(
				BL_IDX
				, COMMENT
				, REG_DATE
				, UPD_DATE
				, USER_ID
				, COMMENT_SECRET
			)
		VALUES
			(
				#{i_sBlidx}
				, #{i_sComment}
				, Getdate()
				, Getdate()
				, #{SS_MEM_ID}
				, #{i_sPassword}
			)
	</insert>
	<update id="updateComment" parameterType="hashmap">
		/*admin.mboard.updateComment - 댓글 수정*/
		UPDATE	MBOARD_COMMENT
			SET
				COMMENT	=	#{i_sComment}
				, UPD_DATE	=	Convert(varchar(10),Getdate(),112)
		WHERE	IDX			=	#{i_sIdx}
	</update>
	<delete id="deleteComment" parameterType="hashmap">
		/*admin.mboard.deleteComment - 댓글 삭제*/
		DELETE
		FROM	MBOARD_COMMENT
		WHERE	IDX			=	#{i_sIdx}
	</delete>
	<select id="getMemberContent" parameterType="hashmap" resultType="hashmap">
		${sql}
	</select>
	<select id="getOrgHirarchyList" parameterType="hashmap" resultType="hashmap">
		/* admin.mboard.getOrgHirarchyList - 성당*/
		SELECT	ORG_IDX
				, NAME
		FROM	CHURCH
	</select>
	<select id="getDeptartMentList" parameterType="hashmap" resultType="hashmap">
		/* admin.mboard.getDeptartMentList - 부서조직*/
		SELECT	ORG_IDX
				, NAME
		FROM	DEPARTMENT
	</select>
	<select id="getOrganizationList" parameterType="hashmap" resultType="hashmap">
		/* admin.mboard.getOrganizationList - 기타조직*/
		SELECT	ORG_IDX
				, NAME
		FROM	ORGANIZATION
	</select>
	<select id="getIdBlIdx" parameterType="hashmap" resultType="hashmap">
		SELECT	MAX(BL_IDX) + 1 AS CNT
		FROM	MBOARD
	</select>
	<insert id="insertPostsMaster" parameterType="hashmap" useGeneratedKeys="false">
		/*admin.mboard.insertPostsMaster - posts 저장*/
		INSERT	INTO	MBOARD
			(
				BL_IDX
				, TITLE
				, CONTENT
				, USER_ID
				, WRITER
				, PWD
				, REGDATE
				, UPDDATE
				, IS_VIEW
				, IS_SECRET
				, DEPART_IDX
				, CHURCH_IDX
				, HIT
				, B_IDX
				, IS_NOTICE
				, C_IDX
				, UPDATE_ID	
			)
			VALUES
			(
				#{i_sBlidx}
				, #{title}
				, #{contents}
				, #{SS_MEM_ID}
				, #{SS_MEM_NM}
				, #{write_password}
				, Getdate()
				, Getdate()
				, 'Y'
				, 'N'
				, #{SS_DEPARTIDX}
				, #{SS_CHURCHIDX}
				, 0
				, #{i_sBidx}
				, 'N'
				, #{i_sCategory}
				, #{SS_MEM_ID}
			)
	</insert>
	<update id="updatePostsMaster" parameterType="hashmap">
		/*admin.mboard.updatePostsMaster - posts 수정*/
		UPDATE	MBOARD
		SET
				TITLE				= #{title}
				, CONTENT			= #{contents}
				, USER_ID			= #{SS_MEM_ID}
				, WRITER			= #{SS_MEM_NM}
				, PWD				= #{write_password}
				, UPDDATE			= Getdate()
				, IS_VIEW			= 'Y'
				, IS_SECRET			= 'N'
				, DEPART_IDX		= #{SS_DEPARTIDX}
				, CHURCH_IDX		= #{SS_CHURCHIDX}
				, B_IDX				= #{i_sBidx}
				, IS_NOTICE			= 'N'
				, C_IDX				= #{i_sCategory}
				, UPDATE_ID			= #{SS_MEM_ID}
		WHERE	BL_IDX				= #{i_sBlidx}
	</update>
	<update id="deletePosts" parameterType="hashmap">
		UPDATE	MBOARD
		SET		IS_VIEW	=	'N'
		WHERE	BL_IDX				= #{i_sBlidx}
	</update>
	<insert id="insertUpload" parameterType="hashmap">
		/*admin.mboard.insertUpload - 파일 업로드 저장*/
		INSERT	MBOARD_UPLOAD
				(
					BL_IDX
					, FILENAME
					, FILEPATH
					, STRFILENAME
					, FILETYPE
					, FILESIZE
					, IS_USE
					, USER_ID
				)
		VALUES (
					#{BL_IDX}
					, #{ORIGINAL_FILE_NAME}
					, #{UPLOAD_PATH}
					, #{STORED_FILE_NAME}
					, #{FILE_TYPE}
					, #{FILE_SIZE}
					, #{IS_USE}
					, #{USER_ID}
				)
	</insert>
	<delete id="deleteUpload" parameterType="hashmap">
		DELETE
		FROM	MBOARD_UPLOAD
		WHERE	1=1
		<if test='i_sBlidx != null and !"".equals(i_sBlidx)'> AND BL_IDX	= #{i_sBlidx} </if>
		<if test='i_sStrFileName != null and !"".equals(i_sStrFileName)'> AND		STRFILENAME	=	#{i_sStrFileName} </if>
	</delete>
	
	<select id="getAttachList" parameterType="hashmap" resultType="hashmap">
		SELECT	*
		FROM	MBOARD_UPLOAD
		WHERE	1=1
		<if test='i_sBuidx != null and !"".equals(i_sBuidx)'> AND BU_IDX	= #{i_sBuidx} </if>
		<if test='i_sBlidx != null and !"".equals(i_sBlidx)'> AND BL_IDX	= #{i_sBlidx} </if>
	</select>
	<select id="getalbList" parameterType="hashmap" resultType="hashmap">
		<include refid="common.pagingPre"/>
		SELECT	ROW_NUMBER() OVER(ORDER BY REGDATE DESC, IDX DESC) RNUM
				, M.CONTENT
				, M.TITLE
				, MU.FILEPATH
				, MU.FILENAME
				, MU.STRFILENAME
				, convert(char(10),  M.REGDATE, 120) REGDATE
				, M.HIT
				, M.BL_IDX
				, M.B_IDX
				, M.IDX
		FROM	MBOARD			M
				, MBOARD_UPLOAD MU
		WHERE	1=1
		AND		M.BL_IDX	=	MU.BL_IDX
		<if test='i_sBidx != null and !"".equals(i_sBidx)'> AND M.B_IDX	= #{i_sBidx} </if> 
		<if test='i_sCIdx != null and !"".equals(i_sCIdx)'> AND M.C_IDX	= #{i_sCIdx} </if>
		<if test='i_sIsView != null and !"".equals(i_sIsView)'> AND M.IS_VIEW	= #{i_sIsView} </if>
		<include refid="common.pagingPost"/>
	</select>
	<select id="getAlbView" parameterType="hashmap" resultType="hashmap">
		SELECT	ROW_NUMBER() OVER(ORDER BY REGDATE DESC, IDX DESC) RNUM
				, M.BL_IDX
				, M.TITLE
				, M.CONTENT
				, MU.FILEPATH
				, MU.FILENAME
				, MU.STRFILENAME
				, convert(char(10),  M.REGDATE, 120) REGDATE
				, M.HIT
				, M.IDX
				, M.B_IDX
				, M.C_IDX
				, M.USER_ID
				, M.WRITER
				, M.IS_NOTICE
				, (
					SELECT	NAME
					FROM	DEPARTMENT DT
					WHERE	DT.DEPART_IDX = M.DEPART_IDX
					) AS DEPART_NAME
				, (SELECT TOP 1 BL_IDX FROM MBOARD WHERE BL_IDX=(SELECT MAX(BL_IDX) FROM MBOARD X WHERE X.B_IDX = #{i_sBidx} AND X.BL_IDX <![CDATA[<]]> #{i_sBlidx} )) AS PRE_BL_IDX
				, (SELECT TOP 1 BL_IDX FROM MBOARD WHERE BL_IDX=(SELECT MIN(BL_IDX) FROM MBOARD X WHERE X.B_IDX = #{i_sBidx} AND X.BL_IDX <![CDATA[>]]> #{i_sBlidx} )) AS NEXT_BL_IDX
		FROM	MBOARD			M
				, MBOARD_UPLOAD MU
		WHERE	1=1
		AND		M.BL_IDX	=	MU.BL_IDX
		AND		M.BL_IDX	=	#{i_sBlidx}
	</select>
	<select id="getMagazineList" parameterType="hashmap" resultType="hashmap">
		<include refid="common.pagingPre"/>
					SELECT	M_IDX
							, NO
							, CONVERT(char(10), PUBDATE, 102) AS PUBDATE
							, CONVERT(char(8), PUBDATE, 112) + '_' + NO AS MP3FILE
							, ISNULL(MP3, '') AS MP3
							, PDF
							, ISNULL(COVER_IMAGE, '') AS COVER_IMAGE
							, ISNULL(WEEK_COMMENT, '') AS WEEK_COMMENT
							, ISNULL(COVER_COMMENT, '') AS COVER_COMMENT
							, ISNULL(B.DESCRIPTION, '') AS DESCRIPTION
					FROM	MAGAZINE	A
					LEFT	OUTER JOIN HOLIDAY B
					ON A.PUBDATE	=	B.H_DATE
					WHERE	PUB_IDX		=	'3'
					AND		IS_PUBLISH	=	'1'
		<include refid="common.pagingPost"/>
	</select>
	<select id="getUploadVo" parameterType="hashmap" resultType="hashmap">
		SELECT	BU_IDX
				, FILEPATH
				, STRFILENAME
		FROM	MBOARD_UPLOAD
		WHERE	BL_IDX		=	#{i_sBlidx}
		AND		STRFILENAME	=	#{i_sStrFileName}
	</select>
	<delete id="deleteMboardUpload" parameterType="hashmap">
		DELETE
		FROM	MBOARD_UPLOAD
		WHERE	BL_IDX		=	#{i_sBlidx}
		AND		STRFILENAME	=	#{i_sStrFileName}
	</delete>
</mapper>